/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package game.gameLogic;

import entities.Boss;
import entities.Entity;
import entities.Mob;
import entities.Player;
import java.util.Random;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import Sounds.BGMusic;
import game.Menu;
import game.Leaderboards;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.io.File;
import static java.lang.Thread.sleep;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author Wein
 */
public class StoryMode extends javax.swing.JFrame implements GameState {

    /**
     * Creates new form StoryMode
     */
    public StoryMode() {
        initComponents();
        setVisibleAllFalse();
        storyDialogue(stDialogues());  
        skillsInActive();
        try{
            
            File fontStyle = new File("src/fonts/8-bit-hud.ttf");
            Font font = Font.createFont(Font.TRUETYPE_FONT,fontStyle);
            
            Font timerFont = font.deriveFont(14f);
            lblTime.setFont(timerFont);

            Font nameFont = font.deriveFont(12f);
           lblPlayer.setFont(nameFont);
           lblEnemy.setFont(nameFont);
           btnContinue.setFont(nameFont);
           btnContinue.setVisible(false);
           btnFight.setFont(nameFont);
           lblNameEnemy.setFont(nameFont);
           randomDialogue.setFont(nameFont);
           Font dialogueFont = font.deriveFont(9f);
           dialogue.setFont(dialogueFont);
           dialogue2.setFont(dialogueFont);
           dialogue3.setFont(dialogueFont);
           dialogue4.setFont(dialogueFont);
           dialogue5.setFont(dialogueFont);
           dialogue6.setFont(dialogueFont);
           dialogue7.setFont(dialogueFont);
           dialogue8.setFont(dialogueFont);
           dialogue9.setFont(dialogueFont);
           enemyIntro1.setFont(dialogueFont);
           enemyIntro2.setFont(dialogueFont);
           enemyIntro3.setFont(dialogueFont);
           enemyIntro4.setFont(dialogueFont);
           enemyIntro5.setFont(dialogueFont);
           enemyIntro6.setFont(dialogueFont);
        } catch (Exception e)
        {
            e.printStackTrace();
        }
        IntroDialogues();
       gamePlay();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDialogue = new javax.swing.JPanel();
        dialogue5 = new javax.swing.JLabel();
        dialogue2 = new javax.swing.JLabel();
        dialogue = new javax.swing.JLabel();
        dialogue3 = new javax.swing.JLabel();
        dialogue4 = new javax.swing.JLabel();
        checker = new javax.swing.JLabel();
        checker1 = new javax.swing.JLabel();
        dialogue6 = new javax.swing.JLabel();
        dialogue7 = new javax.swing.JLabel();
        dialogue8 = new javax.swing.JLabel();
        dialogue9 = new javax.swing.JLabel();
        btnContinue = new javax.swing.JLabel();
        btnSkip = new javax.swing.JLabel();
        pnlIntroduceEnemy = new javax.swing.JPanel();
        lblNameEnemy = new javax.swing.JLabel();
        imgEnemy = new javax.swing.JLabel();
        enemyIntro1 = new javax.swing.JLabel();
        btnFight = new javax.swing.JLabel();
        enemyIntro6 = new javax.swing.JLabel();
        enemyIntro2 = new javax.swing.JLabel();
        enemyIntro3 = new javax.swing.JLabel();
        enemyIntro4 = new javax.swing.JLabel();
        enemyIntro5 = new javax.swing.JLabel();
        SpecialIntro = new javax.swing.JLabel();
        lblplay = new javax.swing.JLabel();
        pgEnemy = new javax.swing.JProgressBar();
        pgPlayer = new javax.swing.JProgressBar();
        btnSkill1 = new javax.swing.JButton();
        btnSkill2 = new javax.swing.JButton();
        btnSkill3 = new javax.swing.JButton();
        btnSkill4 = new javax.swing.JButton();
        enemy1 = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        btnPause = new javax.swing.JButton();
        lblPlayer = new javax.swing.JLabel();
        lblEnemy = new javax.swing.JLabel();
        pnlRandomDialogue = new javax.swing.JPanel();
        randomDialogue = new javax.swing.JLabel();
        EnemyChecker = new javax.swing.JLabel();
        lblBackground = new javax.swing.JLabel();
        pnlMenu = new javax.swing.JPanel();
        btnUnpause = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlDialogue.setBackground(new java.awt.Color(0, 0, 0));
        pnlDialogue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlDialogueMouseClicked(evt);
            }
        });
        pnlDialogue.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dialogue5.setForeground(new java.awt.Color(255, 255, 255));
        pnlDialogue.add(dialogue5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 1200, 30));

        dialogue2.setForeground(new java.awt.Color(255, 255, 255));
        pnlDialogue.add(dialogue2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 1160, 60));

        dialogue.setForeground(new java.awt.Color(255, 255, 255));
        pnlDialogue.add(dialogue, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1170, 70));

        dialogue3.setForeground(new java.awt.Color(255, 255, 255));
        pnlDialogue.add(dialogue3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 1130, 30));

        dialogue4.setForeground(new java.awt.Color(255, 255, 255));
        pnlDialogue.add(dialogue4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 1210, 20));

        checker.setText("checker");
        pnlDialogue.add(checker, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 470, -1, -1));

        checker1.setText("checker");
        pnlDialogue.add(checker1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 440, -1, -1));

        dialogue6.setForeground(new java.awt.Color(255, 255, 255));
        pnlDialogue.add(dialogue6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 1210, 20));

        dialogue7.setForeground(new java.awt.Color(255, 255, 255));
        pnlDialogue.add(dialogue7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 1220, 20));

        dialogue8.setForeground(new java.awt.Color(255, 255, 255));
        pnlDialogue.add(dialogue8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 1220, 20));

        dialogue9.setForeground(new java.awt.Color(255, 255, 255));
        pnlDialogue.add(dialogue9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 1210, 50));

        btnContinue.setForeground(new java.awt.Color(255, 255, 255));
        btnContinue.setText("Continue");
        btnContinue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnContinueMouseClicked(evt);
            }
        });
        pnlDialogue.add(btnContinue, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 580, 230, 60));

        btnSkip.setForeground(new java.awt.Color(255, 255, 255));
        btnSkip.setText("Skip");
        btnSkip.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSkipMouseClicked(evt);
            }
        });
        pnlDialogue.add(btnSkip, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 660, -1, -1));

        getContentPane().add(pnlDialogue, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pnlIntroduceEnemy.setBackground(new java.awt.Color(0, 0, 0));
        pnlIntroduceEnemy.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNameEnemy.setForeground(new java.awt.Color(255, 255, 255));
        lblNameEnemy.setToolTipText("");
        pnlIntroduceEnemy.add(lblNameEnemy, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 40, -1, 20));

        imgEnemy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/marga.jpg"))); // NOI18N
        pnlIntroduceEnemy.add(imgEnemy, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 80, -1, -1));

        enemyIntro1.setForeground(new java.awt.Color(255, 255, 255));
        pnlIntroduceEnemy.add(enemyIntro1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, 10));

        btnFight.setForeground(new java.awt.Color(255, 255, 255));
        btnFight.setText("Fight");
        btnFight.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFightMouseClicked(evt);
            }
        });
        pnlIntroduceEnemy.add(btnFight, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 330, -1, -1));

        enemyIntro6.setForeground(new java.awt.Color(255, 255, 255));
        pnlIntroduceEnemy.add(enemyIntro6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 930, -1));

        enemyIntro2.setForeground(new java.awt.Color(255, 255, 255));
        pnlIntroduceEnemy.add(enemyIntro2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 930, -1));

        enemyIntro3.setForeground(new java.awt.Color(255, 255, 255));
        pnlIntroduceEnemy.add(enemyIntro3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 930, -1));

        enemyIntro4.setForeground(new java.awt.Color(255, 255, 255));
        pnlIntroduceEnemy.add(enemyIntro4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 930, -1));

        enemyIntro5.setForeground(new java.awt.Color(255, 255, 255));
        pnlIntroduceEnemy.add(enemyIntro5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 930, -1));

        SpecialIntro.setForeground(new java.awt.Color(255, 255, 255));
        SpecialIntro.setText("jLabel1");
        pnlIntroduceEnemy.add(SpecialIntro, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, -1));

        getContentPane().add(pnlIntroduceEnemy, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 1280, 370));

        lblplay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/alienpls3-alienpls.gif"))); // NOI18N
        getContentPane().add(lblplay, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 280, 60, 110));
        getContentPane().add(pgEnemy, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 80, 430, 30));
        getContentPane().add(pgPlayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 430, 30));

        btnSkill1.setText("Skill1");
        btnSkill1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkill1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnSkill1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 480, -1, -1));

        btnSkill2.setText("Skill2");
        btnSkill2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkill2ActionPerformed(evt);
            }
        });
        getContentPane().add(btnSkill2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 480, -1, -1));

        btnSkill3.setText("Skill3");
        btnSkill3.setToolTipText("");
        btnSkill3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkill3ActionPerformed(evt);
            }
        });
        getContentPane().add(btnSkill3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 480, -1, -1));

        btnSkill4.setText("Skill4");
        btnSkill4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkill4ActionPerformed(evt);
            }
        });
        getContentPane().add(btnSkill4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 480, -1, -1));

        enemy1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/enemy1.gif"))); // NOI18N
        getContentPane().add(enemy1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 110, 520, 470));

        lblTime.setForeground(new java.awt.Color(255, 255, 255));
        lblTime.setText("30");
        getContentPane().add(lblTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(483, 60, 270, 20));

        btnPause.setText("Pause");
        btnPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPauseActionPerformed(evt);
            }
        });
        getContentPane().add(btnPause, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 30, -1, -1));

        lblPlayer.setForeground(new java.awt.Color(255, 255, 255));
        lblPlayer.setText("Player 1");
        getContentPane().add(lblPlayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        lblEnemy.setForeground(new java.awt.Color(255, 255, 255));
        lblEnemy.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEnemy.setText("EnemyName");
        lblEnemy.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(lblEnemy, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 50, 256, 20));

        pnlRandomDialogue.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        pnlRandomDialogue.add(randomDialogue, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 590, 60));
        pnlRandomDialogue.add(EnemyChecker, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, -1, -1));

        getContentPane().add(pnlRandomDialogue, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 620, 1260, 100));

        lblBackground.setForeground(new java.awt.Color(255, 255, 255));
        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/background/pvpScreen.gif"))); // NOI18N
        getContentPane().add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pnlMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnUnpause.setText("Unpause");
        btnUnpause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnpauseActionPerformed(evt);
            }
        });
        pnlMenu.add(btnUnpause, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 149, -1, -1));

        getContentPane().add(pnlMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 130, 320, 330));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPauseActionPerformed
        // TODO add your handling code here:
        pause=1;
        pause();
    }//GEN-LAST:event_btnPauseActionPerformed

    private void btnUnpauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnpauseActionPerformed
        // TODO add your handling code here:
        pause=0;
        unPause();
    }//GEN-LAST:event_btnUnpauseActionPerformed

    private void btnSkill1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkill1ActionPerformed
        // TODO add your handling code here:
      
        Random rand=new Random();
        int damage=rand.nextInt(100)+1;
        if(enemy!=4){
            stud.damage(500);
        }else if(enemy==4){
            kai.damage(500);
        }
        turns++;
        orbs++;
        skillsActive();
        turncount=2;
        enemyDamages();
        
        
     
    }//GEN-LAST:event_btnSkill1ActionPerformed

    private void btnSkill2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkill2ActionPerformed
        // TODO add your handling code here:
        Random rand=new Random();
        int damage=rand.nextInt(50)+1;
        if(enemy!=4){
            stud.damage(damage);
        }else if(enemy==4){
            kai.damage(damage);
        }
        orbs-=3;
        turns++;
        turncount=2;
        enemyDamages();
        btnSkill2.setEnabled(false);
        skillsActive();
    }//GEN-LAST:event_btnSkill2ActionPerformed

    private void btnSkill3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkill3ActionPerformed
        // TODO add your handling code here:
        
        player.addHP(100);
        orbs-=4;
        turns++;
        turncount=2;
        enemyDamages();
        btnSkill3.setEnabled(false);
        skillsActive();
    }//GEN-LAST:event_btnSkill3ActionPerformed

    private void btnSkill4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkill4ActionPerformed
        // TODO add your handling code here:
         Random rand=new Random();
        int damage=rand.nextInt(200)+1;
        if(enemy!=4){
            stud.damage(damage);
        }else if(enemy==4){
            kai.damage(damage);
        }
        orbs-=8;
        turns++;
        turncount=2;
        enemyDamages();
        btnSkill4.setEnabled(false);
        skillsActive();
    }//GEN-LAST:event_btnSkill4ActionPerformed

    private void pnlDialogueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDialogueMouseClicked
        // TODO add your handling code here:
    
    }//GEN-LAST:event_pnlDialogueMouseClicked

    private void btnContinueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnContinueMouseClicked
        // TODO add your handling code here:
        pnlDialogue.setVisible(false);
    }//GEN-LAST:event_btnContinueMouseClicked

    private void btnFightMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFightMouseClicked
        // TODO add your handling code here:
        randomDialogue.setText("");
        pnlIntroduceEnemy.setVisible(false);
        setVisibleAllTrue();
    }//GEN-LAST:event_btnFightMouseClicked

    private void btnSkipMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSkipMouseClicked
        // TODO add your handling code here:
        skip=1;
        pnlDialogue.setVisible(false);
    }//GEN-LAST:event_btnSkipMouseClicked
    
    
    int mili=0;
    int sec=0;
    int min=0;
    int hour=0;
    int day=0;
    int pause=0;
    int choice=2; // counter for na pick na character 1-marga 2-bert 3-geb
    int stDialogue=0;//Story Dialogue
    int enemy=1;//counter para mo change ang enemy icon og background tas dialogue probably
    int win=0;//to stop timer after winning;
    int lose=0;
    int retry;// checker what type of retry check retry method
    int turncount=1;
    int orbs=0;
    int turns=0;
    int flag=0;
    String pName="Derick";
    Connection con; //variable for databse connection
    Statement st; //variable for the sql        
    Entity stud=new Mob(100);//mob damage increase per %5(tbd)
    Entity player=new Player(200);
    Entity kai=new Boss(500);
    int proceed=0;
    int lblTextLength=0;
    Timer tm;
    int counter=0;
    int skip=0;
    String fileName="src/Sounds/roblox.wav";
    BGMusic bgm=new BGMusic(1);
   
    public void flagChecker(){
        if(win==1||lose==1){
            flag=1;
        }
    }
    
    public void skillsActive(){
        if(orbs>=3){
            btnSkill2.setEnabled(true);
        }if(orbs>=4){
            btnSkill3.setEnabled(true);
        }if(orbs>=10){
            btnSkill4.setEnabled(true);
        }
    }
    
    public void skillsInActive(){
        
            btnSkill2.setEnabled(false);
      
            btnSkill3.setEnabled(false);
       
            btnSkill4.setEnabled(false);
        
    }
  public void IntroDialogues(){
     // String line1,line2,line3,line4,line5,line6;
      if(enemy==1){
          setVisibleAllFalse();
          pnlIntroduceEnemy.setVisible(true);
          lblNameEnemy.setText("Migantron");
          imgEnemy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/marga.jpg")));
          enemyIntro1.setText("Migantron's realm was a labyrinth of shadow and illusion,");
          enemyIntro2.setText("Her eyes, twin orbs of gleaming obsidian, held the secrets of a thousand forgotten galaxies,");
          enemyIntro3.setText("each glance a silent invitation to the abyss that lurked within her soul.  Her eyes, twin orbs of gleaming obsidian,");
          enemyIntro4.setText("held the secrets of a thousand forgotten galaxies, each glance a silent invitation to the abyss that lurked within her soul. ");
          enemyIntro5.setText("Her voice, a melodic whisper that echoed through the void, ");
          enemyIntro6.setText("carried with it the promise of untold power and unimaginable darkness.");
         
          
      }else if(enemy==2){
          setVisibleAllFalse();
          pnlIntroduceEnemy.setVisible(true);
          lblNameEnemy.setText("Brett");
          imgEnemy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/brett.jpg")));
          enemyIntro1.setText("Migantron's realm was a labyrinth of shadow and illusion,");
          enemyIntro2.setText("Her eyes, twin orbs of gleaming obsidian, held the secrets of a thousand forgotten galaxies,");
          enemyIntro3.setText("each glance a silent invitation to the abyss that lurked within her soul.  Her eyes, twin orbs of gleaming obsidian,");
          enemyIntro4.setText("held the secrets of a thousand forgotten galaxies, each glance a silent invitation to the abyss that lurked within her soul. ");
          enemyIntro5.setText("Her voice, a melodic whisper that echoed through the void, ");
          enemyIntro6.setText("carried with it the promise of untold power and unimaginable darkness.");
    
          
      }else if(enemy==3){
          setVisibleAllFalse();
          pnlIntroduceEnemy.setVisible(true);
          lblNameEnemy.setText("Gabe");
          imgEnemy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gabe.jpg")));
          enemyIntro1.setText("Migantron's realm was a labyrinth of shadow and illusion,");
          enemyIntro2.setText("Her eyes, twin orbs of gleaming obsidian, held the secrets of a thousand forgotten galaxies,");
          enemyIntro3.setText("each glance a silent invitation to the abyss that lurked within her soul.  Her eyes, twin orbs of gleaming obsidian,");
          enemyIntro4.setText("held the secrets of a thousand forgotten galaxies, each glance a silent invitation to the abyss that lurked within her soul. ");
          enemyIntro5.setText("Her voice, a melodic whisper that echoed through the void, ");
          enemyIntro6.setText("carried with it the promise of untold power and unimaginable darkness.");
         
      }else if(enemy==4){
          setVisibleAllFalse();
          pnlIntroduceEnemy.setVisible(true);
          lblNameEnemy.setText("Khai");
          imgEnemy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sirKhai.jpg")));
          enemyIntro1.setText("Migantron's realm was a labyrinth of shadow and illusion,");
          enemyIntro2.setText("Her eyes, twin orbs of gleaming obsidian, held the secrets of a thousand forgotten galaxies,");
          enemyIntro3.setText("each glance a silent invitation to the abyss that lurked within her soul.  Her eyes, twin orbs of gleaming obsidian,");
          enemyIntro4.setText("held the secrets of a thousand forgotten galaxies, each glance a silent invitation to the abyss that lurked within her soul. ");
          enemyIntro5.setText("Her voice, a melodic whisper that echoed through the void, ");
          enemyIntro6.setText("carried with it the promise of untold power and unimaginable darkness.");
          
      }if(enemy==choice){
          SpecialIntro.setText("My Twin, My other Half, the one who have chosen the path of darkness");
      }else{
          SpecialIntro.setText("");
      }
  }
    
    public void dialogue(String txt){
       
          lblTextLength = txt.length();
      
        tm=new Timer(20, new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent arg0){
                counter++;
                if(counter>lblTextLength){
                    counter=0;
                    turncount=1;
                     tm.stop();
                     setVisible();
                }else if(stud.getHP()<=0||kai.getHP()<=0){
                    counter=0;
                    tm.stop();
                }
                else{
                    randomDialogue.setText(txt.substring(0,counter));     
                    }
            }
        });
        tm.start();
        
 }
    public void setVisibleAllFalse(){
        lblplay.setVisible(false);
        pgEnemy.setVisible(false);
        pgPlayer.setVisible(false);
        btnSkill1.setVisible(false);
        btnSkill2.setVisible(false);
        btnSkill3.setVisible(false);
        btnSkill4.setVisible(false);
        enemy1.setVisible(false);
        lblTime.setVisible(false);
        btnPause.setVisible(false);
        lblPlayer.setVisible(false);
        lblEnemy.setVisible(false);
          
        pnlRandomDialogue.setVisible(false);
        pnlMenu.setVisible(false);
    }
    public void setVisibleAllTrue(){
    lblplay.setVisible(true);
        pgEnemy.setVisible(true);
        pgPlayer.setVisible(true);
        btnSkill1.setVisible(true);
        btnSkill2.setVisible(true);
        btnSkill3.setVisible(true);
        btnSkill4.setVisible(true);
        enemy1.setVisible(true);
        lblTime.setVisible(true);
        btnPause.setVisible(true);
        lblPlayer.setVisible(true);
        lblEnemy.setVisible(true);
          pnlRandomDialogue.setVisible(true);
     
}
    public String stDialogues(){
        String text="";
        if(stDialogue==0){
            text="In the vast expanse of the cosmos, where stars burned bright and nebulae painted the void with their ethereal hues,";
        }else if(stDialogue==1&&enemy==1){
            text="there roamed a solitary figure known only as the Galactic Wanderer.";
        }else if(stDialogue==2&&enemy==1){
            text="Their journey was not one of leisure, but of purpose";
        }else if(stDialogue==3&&enemy==1){
            text="driven by a quest to confront the greatest adversaries the galaxy had ever known.";
        }else if(stDialogue==4&&enemy==1){
            text="Four beings of immense power and malevolence had risen to dominance, casting shadows across the stars";
        }else if(stDialogue==5&&enemy==1){
            text="and threatening the balance of the cosmos.";
        }else if(stDialogue==6&&enemy==1){
            text="They were the Dark Lords, masters of chaos and destruction, each wielding powers beyond mortal comprehension.";
        }else if (stDialogue==7&&enemy==1){
            text="Would the Wanderer emerge victorious, shattering the shackles of darkness and restoring balance to the cosmos? ";
        }else if(stDialogue==8&&enemy==1){
            text="Or would they be consumed by the void, their noble quest ending in despair and defeat?";
        }
        return text;
    }
     public void storyDialogue(String txt){
        lblTextLength = txt.length();
      
        tm=new Timer(10, new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent arg0){
                counter++;
                if(counter>lblTextLength){
                    stDialogue++;
                    counter=0;
                     tm.stop();
                  
                    if(stDialogue==9){
                        stDialogue=0;
                        btnContinue.setVisible(true);
                    }else{
                        storyDialogue(stDialogues());
                    }
                    
                }else if(skip==1){
                    counter=0;
                    tm.stop();
                }
                else{
                    if(stDialogue==0){
                   // ari ibutang if ganahan mo mag tingog taga print sa text ang atoang dialogue
                    dialogue.setText(txt.substring(0,counter));
                     
                    }else if(stDialogue==1){
                        dialogue2.setText(txt.substring(0,counter));
                       
                    }else if(stDialogue==2){
                        dialogue3.setText(txt.substring(0,counter));
                    }else if(stDialogue==3){
                        dialogue4.setText(txt.substring(0,counter));
                    }else if(stDialogue==4){
                        dialogue5.setText(txt.substring(0,counter));
                    }else if(stDialogue==5){
                        dialogue6.setText(txt.substring(0,counter));
                    }else if(stDialogue==6){
                        dialogue7.setText(txt.substring(0,counter));
                    }else if(stDialogue==7){
                        dialogue8.setText(txt.substring(0,counter));
                    }else if(stDialogue==8){
                        dialogue9.setText(txt.substring(0,counter));
                    }
                }
            }
        });
        tm.start();
        
 }
    
    public void enemyDamages(){
        turn();
        pgPlayer.setValue(player.getHP());
        dialogue.setText(""+player.getHP());
        if(enemy!=4){
        pgEnemy.setValue(stud.getHP());
        }else{
        pgEnemy.setValue(kai.getHP());
    }
    }
    
    public void setVisible(){
        if(turncount==2){
        btnSkill1.setVisible(false);
        btnSkill2.setVisible(false);
        btnSkill3.setVisible(false);
        btnSkill4.setVisible(false);
        }else if(turncount==1){
        btnSkill1.setVisible(true);
        btnSkill2.setVisible(true);
        btnSkill3.setVisible(true);
        btnSkill4.setVisible(true);
        }
    }
    @Override
     public void pause(){
        pnlMenu.setVisible(true);
        //lblplay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/alien.gif")));
     }
     public String randomDialogue(){
         Random rand=new Random();
         int ramdomizer=rand.nextInt(5)+1;
        if(ramdomizer==1){
            return "YOU WILL DIE!";
        }else if(ramdomizer==2){
            return "YOU WILL BOW DOW TO ME!";
        }else if(ramdomizer==3){
            return "THE WEAK SHOULD FEAR THE STRONG";
        }else if(ramdomizer==4){
            return "THIS WORLD IS OURS";
        }else if(ramdomizer==5){
            return "DIE";
        }
        else{
            return "DIE!";
        }
         
     }
     public String toStringTime(){
         return ""+day+":"+hour+":"+min+":"+sec+":"+mili;
     }
     
     public int addAllTime(){
         return (day*24)+(hour*60)+(min*60)+(sec*1000)+mili;
     }
     
     
     
    
     
     public void addLeaderboard(){
     
         try{
           Class.forName("com.mysql.cj.jdbc.Driver");
           Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/oopfinals", "root", "");
           
       
           
           Statement st = con.createStatement();
           
           String sql = "select * from leaderboard where Player='"+pName+"'";
          
           ResultSet rs = st.executeQuery(sql);
           
         if(rs.next()){
             int val=rs.getInt("Time2");
             if(val>addAllTime()){
            updateRecord();
             }
           }else{
               addRecord();
               
           }
           con.close();
      }catch(Exception e){
          System.out.println(e.getMessage());
      }
     }
     
     public void addRecord(){
         try {
    Class.forName("com.mysql.cj.jdbc.Driver");
    con = DriverManager.getConnection("jdbc:mysql://localhost:3306/oopfinals", "root", "");

    String sql = "INSERT INTO `leaderboard`(`Player`, `Time`, `Time2`) "
    + "VALUES ('" + pName + "','" + toStringTime() + "','" +  addAllTime() + "')";
    st = con.createStatement();
    st.execute(sql);
    } catch (ClassNotFoundException | SQLException ex) {
    Logger.getLogger(StoryMode.class.getName()).log(Level.SEVERE, null, ex);
 }
     }
     
  public void updateRecord(){
     
    try {
    Class.forName("com.mysql.cj.jdbc.Driver");
    con = DriverManager.getConnection("jdbc:mysql://localhost:3306/oopfinals", "root", "");
    String sql = "UPDATE `leaderboard`SET Time='" + toStringTime() + "', Time2='" + addAllTime()+ "' WHERE Player='" + pName + "'";
    st = con.createStatement();
    st.execute(sql);
    }catch (ClassNotFoundException | SQLException ex) {
    Logger.getLogger(Leaderboards.class.getName()).log(Level.SEVERE, null, ex);
    }
  }
     
    public void changeEnemy(){
        if(enemy==1){
                    pgEnemy.setValue(stud.getHP());
                    gameWin();
                    enemy1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/enemy1.gif")));
                    pgPlayer.setValue(player.getHP());
                    
                }else if(enemy==2){             
                    pgEnemy.setValue(stud.getHP());
                    gameWin();
                    enemy1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/enemy2.gif")));
                    pgPlayer.setValue(player.getHP());
                    
                }else if(enemy==3){
                    
                    //System.out.println("I am your last enemy");
                    pgEnemy.setValue(stud.getHP());
                    gameWin();
                    enemy1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/enemy3.gif")));
                    pgPlayer.setValue(player.getHP());
                }else if(enemy==4){
                    pgEnemy.setValue(kai.getHP());
                    gameWin();
                    enemy1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/enemy4.gif")));
                    pgPlayer.setValue(player.getHP());
                }
    }
    public void gameWin(){
        if(stud.getHP()<=0&&enemy!=4){
            enemy++;
            player.setHP(200);
            stud.setHP(100);
            stud.addDamage(30);
            flagChecker();
           IntroDialogues(); 
        }else if(player.getHP()<=0&&enemy!=4){
            lose=1;
            flagChecker();
            
            JOptionPane.showMessageDialog(this, "YOU LOSE", "Good Game", JOptionPane.INFORMATION_MESSAGE);
            new Menu().setVisible(true);
            this.setVisible(false);
        }else if(kai.getHP()<=0){
            //Dialogue you finish the game
            //Add timer to database
            
            win=1;
            flagChecker();
            addLeaderboard();
            JOptionPane.showMessageDialog(this, "YOU WIN", "Good Game", JOptionPane.INFORMATION_MESSAGE);
            
           
        }
    }

    public void retry(){
        if(retry==1){
            //Reset only stage but timer is running;
        }else if(retry==2){
            //Reset tanan asta stage back to 0 also ang timer;
        }
    }
    
    public void gamePlay(){
        stud.setDamage(30);
        kai.setDamage(60);
        Thread game=new Thread(){
            @Override
            public void run(){
                timer();
            while(flag==0){
                changeEnemy();
                
            }}
        };
        game.start();
    }
    @Override
    public void timer(){
        Thread time=new Thread(){
           public void run(){
               while(flag==0){
                   if(pause==0){
                       
                     try{
                       sleep(1);
                       mili++;
                       mili++;
                       lblTime.setText(""+day+"|"+hour+"|"+min+"|"+sec+"|"+mili);
                       if(mili >=1000){ 
                           mili=0;
                           sec++;
                           if(sec>=60){
                            sec=0;
                            min++;
                                if(min>=60){
                                min=0;
                                hour++;
                                    if(hour>=24){
                                    day++;
                                    }
                                }
                                
                           }
                       }   
                     }catch(Exception e){
                         
                     }
                    }
                   
                }
           }                
        };        
       time.start();
    }
    
    @Override
    public  void turn(){
        if(turncount==2){
            setVisible();
            if(turns%5==0){
               stud.addDamage(10);
            }
            Random rand=new Random();
            int damage=rand.nextInt(stud.getDamage())+1;
            player.damage(damage);
            String text=randomDialogue();
            dialogue(text);
           
            EnemyChecker.setText(""+orbs);
            setVisible();
            
        }
    }
    
    public void unPause(){
        pnlMenu.setVisible(false);
        Thread time=new Thread(){
           public void run(){
               while(flag==0){
                   if(pause==0){
                     
                       try{
                       sleep(1);
                       mili++;
                       mili++;
                       lblTime.setText(""+day+":"+hour+":"+min+":"+sec+":"+mili);
                       if(mili >=1000){ 
                           mili=0;
                           sec++;
                           if(sec>=60){
                            sec=0;
                            min++;
                                if(min>=60){
                                min=0;
                                hour++;
                                    if(hour>=24){
                                    day++;
                                    }
                                }
                                
                           }
                       }   
                     }catch(Exception e){
                         
                     }
                    }
                   
                }
           }                
        };        
       time.start();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StoryMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StoryMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StoryMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StoryMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StoryMode().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel EnemyChecker;
    private javax.swing.JLabel SpecialIntro;
    private javax.swing.JLabel btnContinue;
    private javax.swing.JLabel btnFight;
    private javax.swing.JButton btnPause;
    private javax.swing.JButton btnSkill1;
    private javax.swing.JButton btnSkill2;
    private javax.swing.JButton btnSkill3;
    private javax.swing.JButton btnSkill4;
    private javax.swing.JLabel btnSkip;
    private javax.swing.JButton btnUnpause;
    private javax.swing.JLabel checker;
    private javax.swing.JLabel checker1;
    private javax.swing.JLabel dialogue;
    private javax.swing.JLabel dialogue2;
    private javax.swing.JLabel dialogue3;
    private javax.swing.JLabel dialogue4;
    private javax.swing.JLabel dialogue5;
    private javax.swing.JLabel dialogue6;
    private javax.swing.JLabel dialogue7;
    private javax.swing.JLabel dialogue8;
    private javax.swing.JLabel dialogue9;
    private javax.swing.JLabel enemy1;
    private javax.swing.JLabel enemyIntro1;
    private javax.swing.JLabel enemyIntro2;
    private javax.swing.JLabel enemyIntro3;
    private javax.swing.JLabel enemyIntro4;
    private javax.swing.JLabel enemyIntro5;
    private javax.swing.JLabel enemyIntro6;
    private javax.swing.JLabel imgEnemy;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblEnemy;
    private javax.swing.JLabel lblNameEnemy;
    private javax.swing.JLabel lblPlayer;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblplay;
    private javax.swing.JProgressBar pgEnemy;
    private javax.swing.JProgressBar pgPlayer;
    private javax.swing.JPanel pnlDialogue;
    private javax.swing.JPanel pnlIntroduceEnemy;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlRandomDialogue;
    private javax.swing.JLabel randomDialogue;
    // End of variables declaration//GEN-END:variables
}
